/**
 * This code was generated by Builder.io.
 */
import React, { useRef, useState, useEffect } from "react";
import styles from "./Portfolio.module.css";
import PortfolioItem from "./PortfolioItem";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import PortfolioModal from "./PortfolioModal";

// Remove these imports
// import tripleten1 from "../../images/TripleTen/tripleten-1.png";
// import recipeSearcher2 from "../../images/RecipeSearcher/recipe-searcher-2.png";
// import wtwr5 from "../../images/wtwr/wtwr-5.png";

const portfolioData = [
  {
    title: "Agency Website.",
    tag: "WordPress",
    image: "/images/RecipeSearcher/RecipeSearcher2.png",
  },
  {
    title: "Dashboard Website.",
    tag: "React",
    image: "/images/TripleTen/tripleten1.png",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: `/images/wtwr/wtwr5.png`,
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Web/websitec.png",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Rage/1c.png",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Fileread/fileread-sticky-header-c.png",
  },
];

const portfolioDetails = [
  {
    title: "Agency Website.",
    tag: "WordPress",
    image: "/images/RecipeSearcher/RecipeSearcher2.png",
    description: "A responsive agency website built with WordPress.",
    technologies: ["WordPress", "PHP", "CSS", "JavaScript"],
    link: "https://example.com/agency-website",
  },
  {
    title: "Dashboard Website.",
    tag: "React",
    image: "/images/TripleTen/tripleten1.png",
    description: "An interactive dashboard built with React and D3.js.",
    technologies: ["React", "D3.js", "CSS Modules", "REST API"],
    link: "https://example.com/dashboard-website",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: `/images/wtwr/wtwr5.png`,
    description: "A support center website built with PHP and MySQL.",
    technologies: ["PHP", "MySQL", "CSS", "JavaScript"],
    link: "https://example.com/support-center-website",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Web/websitec.png",
    description: "A support center website built with PHP and MySQL.",
    technologies: ["PHP", "MySQL", "CSS", "JavaScript"],
    link: "https://example.com/support-center-website",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Rage/1c.png",
    description: "A support center website built with PHP and MySQL.",
    technologies: ["PHP", "MySQL", "CSS", "JavaScript"],
    link: "https://example.com/support-center-website",
  },
  {
    title: "Support Center Website.",
    tag: "PHP",
    image: "/images/Fileread/fileread-sticky-header-c.png",
    description: "A support center website built with PHP and MySQL.",
    technologies: ["PHP", "MySQL", "CSS", "JavaScript"],
    link: "https://example.com/support-center-website",
  },
];

const Portfolio = () => {
  let sliderRef = useRef(null);
  const [selectedItem, setSelectedItem] = useState(null);

  useEffect(() => {
    if (selectedItem) {
      document.body.classList.add("modal-open");
    } else {
      document.body.classList.remove("modal-open");
    }

    // Cleanup function to remove the class when component unmounts
    return () => {
      document.body.classList.remove("modal-open");
    };
  }, [selectedItem]);

  const next = () => {
    sliderRef.slickNext();
  };
  const previous = () => {
    sliderRef.slickPrev();
  };

  const openModal = (item) => {
    const details = portfolioDetails.find(
      (detail) => detail.title === item.title
    );
    setSelectedItem(details);
  };

  const closeModal = () => {
    setSelectedItem(null);
  };

  const settings = {
    dots: true,
    infinite: true,
    slidesToShow: 3,
    slidesToScroll: 1,
    swipeToSlide: true,
    arrows: false,
    centerMode: true,
    className: styles.slider,
    responsive: [
      {
        breakpoint: 1205,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 800,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          centerPadding: "0",
        },
      },
    ],
  };
  return (
    <section className={styles.portfolio}>
      <div className={styles.header}>
        <div className={styles.aboveTitleLine} />
        <p className={styles.aboveTitle}>MY WORKS</p>
      </div>
      <div className={styles.content}>
        <h2 className={styles.title}>Featured Portfolios</h2>
        <div className={styles.buttons}>
          <button
            className={styles.navButton + " " + styles.navButtonLeft}
            onClick={previous}
          >
            <div className={styles.arrow + " " + styles.left} />
          </button>
          <button
            className={styles.navButton + " " + styles.navButtonRight}
            onClick={next}
          >
            <div className={styles.arrow + " " + styles.right} />
          </button>
        </div>
        <div className={styles.items}>
          <Slider
            ref={(slider) => {
              sliderRef = slider;
            }}
            {...settings}
          >
            {portfolioData.map((item, index) => (
              <div key={index} onClick={() => openModal(item)}>
                <PortfolioItem {...item} />
              </div>
            ))}
          </Slider>
        </div>
      </div>
      {selectedItem && (
        <PortfolioModal item={selectedItem} onClose={closeModal} />
      )}
    </section>
  );
};

export default Portfolio;
